trigger:
  branches:
    include:
      - main
  paths:
    exclude:
      - README.md
      - .gitignore

pr:
  branches:
    include:
      - main
  paths:
    exclude:
      - README.md
      - .gitignore

resources:
  repositories:
    - repository: self
      type: github
      connection: github-bestrong-connection
      name: $(Build.Repository.Name)
      ref: $(Build.SourceBranch)

pool:
  vmImage: 'ubuntu-latest'

variables:
  - name: terraformVersion
    value: '1.5.7'
  - name: workingDirectory
    value: '$(System.DefaultWorkingDirectory)'
  - group: terraform-variables

stages:
  # PR Stage - runs on Pull Requests
  - stage: PR_Validation
    displayName: 'PR Validation'
    condition: eq(variables['Build.Reason'], 'PullRequest')
    jobs:
      - job: ValidateTerraform
        displayName: 'Validate Terraform Configuration'
        steps:
          - checkout: self
          
          - task: Bash@3
            displayName: 'Install Terraform $(terraformVersion)'
            inputs:
              targetType: 'inline'
              script: |
                # Download and install Terraform
                wget -q https://releases.hashicorp.com/terraform/$(terraformVersion)/terraform_$(terraformVersion)_linux_amd64.zip
                unzip -q terraform_$(terraformVersion)_linux_amd64.zip
                sudo mv terraform /usr/local/bin/
                terraform version
          
          - task: DownloadSecureFile@1
            name: envFile
            displayName: 'Download Terraform Environment File'
            inputs:
              secureFile: 'terraform.env'
          
          - task: AzureCLI@2
            displayName: 'Terraform Init'
            inputs:
              azureSubscription: 'bestrong-azure-connection'
              scriptType: 'bash'
              scriptLocation: 'inlineScript'
              inlineScript: |
                # Load environment variables from .env file
                set -a
                source $(envFile.secureFilePath)
                set +a
                
                # Initialize Terraform with backend configuration
                terraform init \
                  -backend-config="storage_account_name=$(TF_STATE_SA)" \
                  -backend-config="container_name=$(TF_STATE_CONTAINER)" \
                  -backend-config="resource_group_name=$(TF_STATE_RG)"
              workingDirectory: '$(workingDirectory)'
          
          - task: AzureCLI@2
            displayName: 'Terraform Validate'
            inputs:
              azureSubscription: 'bestrong-azure-connection'
              scriptType: 'bash'
              scriptLocation: 'inlineScript'
              inlineScript: |
                # Load environment variables from .env file
                set -a
                source $(envFile.secureFilePath)
                set +a
                
                # Validate Terraform configuration
                terraform validate
              workingDirectory: '$(workingDirectory)'
          
          - task: AzureCLI@2
            displayName: 'Terraform Plan'
            inputs:
              azureSubscription: 'bestrong-azure-connection'
              scriptType: 'bash'
              scriptLocation: 'inlineScript'
              inlineScript: |
                # Load environment variables from .env file
                set -a
                source $(envFile.secureFilePath)
                set +a
                
                # Run Terraform plan
                terraform plan -out=tfplan
              workingDirectory: '$(workingDirectory)'
  
  # Main Branch Stage - runs on main branch for CI/CD
  - stage: CI_CD
    displayName: 'CI/CD Pipeline'
    condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/main'))
    jobs:
      - job: DeployTerraform
        displayName: 'Deploy Infrastructure'
        steps:
          - checkout: self
          
          - task: Bash@3
            displayName: 'Install Terraform $(terraformVersion)'
            inputs:
              targetType: 'inline'
              script: |
                # Download and install Terraform
                wget -q https://releases.hashicorp.com/terraform/$(terraformVersion)/terraform_$(terraformVersion)_linux_amd64.zip
                unzip -q terraform_$(terraformVersion)_linux_amd64.zip
                sudo mv terraform /usr/local/bin/
                terraform version
          
          - task: DownloadSecureFile@1
            name: envFile
            displayName: 'Download Terraform Environment File'
            inputs:
              secureFile: 'terraform.env'
          
          - task: AzureCLI@2
            displayName: 'Terraform Init'
            inputs:
              azureSubscription: 'bestrong-azure-connection'
              scriptType: 'bash'
              scriptLocation: 'inlineScript'
              inlineScript: |
                # Load environment variables from .env file
                set -a
                source $(envFile.secureFilePath)
                set +a
                
                # Initialize Terraform with backend configuration
                terraform init \
                  -backend-config="storage_account_name=$(TF_STATE_SA)" \
                  -backend-config="container_name=$(TF_STATE_CONTAINER)" \
                  -backend-config="resource_group_name=$(TF_STATE_RG)"
              workingDirectory: '$(workingDirectory)'
          
          - task: AzureCLI@2
            displayName: 'Terraform Validate'
            inputs:
              azureSubscription: 'bestrong-azure-connection'
              scriptType: 'bash'
              scriptLocation: 'inlineScript'
              inlineScript: |
                # Load environment variables from .env file
                set -a
                source $(envFile.secureFilePath)
                set +a
                
                # Validate Terraform configuration
                terraform validate
              workingDirectory: '$(workingDirectory)'
          
          - task: AzureCLI@2
            displayName: 'Terraform Plan'
            inputs:
              azureSubscription: 'bestrong-azure-connection'
              scriptType: 'bash'
              scriptLocation: 'inlineScript'
              inlineScript: |
                # Load environment variables from .env file
                set -a
                source $(envFile.secureFilePath)
                set +a
                
                # Run Terraform plan
                terraform plan -out=tfplan
              workingDirectory: '$(workingDirectory)'
          
          - task: AzureCLI@2
            displayName: 'Terraform Apply'
            inputs:
              azureSubscription: 'bestrong-azure-connection'
              scriptType: 'bash'
              scriptLocation: 'inlineScript'
              inlineScript: |
                # Load environment variables from .env file
                set -a
                source $(envFile.secureFilePath)
                set +a
                
                # Apply Terraform changes
                terraform apply -auto-approve tfplan
              workingDirectory: '$(workingDirectory)' 